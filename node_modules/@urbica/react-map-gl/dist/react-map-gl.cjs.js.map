{"version":3,"file":"react-map-gl.cjs.js","sources":["../src/components/MapContext/index.js","../src/utils/mapbox-gl.js","../src/components/MapGL/events.js","../src/utils/capitalizeFirstLetter.js","../src/utils/isArraysEqual.js","../src/utils/diff.js","../src/utils/queryRenderedFeatures.js","../src/components/Layer/index.js","../src/components/CustomLayer/index.js","../src/utils/normalizeChildren.js","../src/components/MapGL/index.js","../src/utils/validateSource.js","../src/components/Source/index.js","../src/components/Popup/index.js","../src/components/Marker/index.js","../src/components/FeatureState/index.js","../src/components/Image/index.js","../src/components/AttributionControl/index.js","../src/components/FullscreenControl/index.js","../src/components/GeolocateControl/index.js","../src/components/NavigationControl/index.js","../src/components/ScaleControl/index.js","../node_modules/@mapbox/mapbox-gl-language/index.js","../src/components/LanguageControl/index.js","../node_modules/@mapbox/mapbox-gl-traffic/mapbox-gl-traffic.js","../src/components/TrafficControl/index.js","../src/components/Filter/index.js"],"sourcesContent":["// @flow\n\nimport { createContext } from 'react';\nimport type { Context } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\n\nconst MapContext: Context<?MapboxMap> = createContext(null);\n\nexport default MapContext;\n","// @flow\nimport type MapboxGL from 'mapbox-gl/src/index';\n\nconst isBrowser: boolean = !(\n  Object.prototype.toString.call(global.process) === '[object process]' &&\n  !global.process.browser\n);\n\n// $FlowFixMe\nconst mapboxgl: MapboxGL = isBrowser ? require('mapbox-gl') : null;\n\nexport default mapboxgl;\n","// @flow\n\nconst events = [\n  'resize',\n  'remove',\n  'mousedown',\n  'mouseup',\n  'mouseover',\n  'mousemove',\n  'click',\n  'dblclick',\n  'mouseenter',\n  'mouseleave',\n  'mouseout',\n  'contextmenu',\n  'touchstart',\n  'touchend',\n  'touchmove',\n  'touchcancel',\n  'movestart',\n  'move',\n  'moveend',\n  'dragstart',\n  'drag',\n  'dragend',\n  'zoomstart',\n  'zoom',\n  'zoomend',\n  'rotatestart',\n  'rotate',\n  'rotateend',\n  'pitchstart',\n  'pitch',\n  'pitchend',\n  'boxzoomstart',\n  'boxzoomend',\n  'boxzoomcancel',\n  'webglcontextlost',\n  'webglcontextrestored',\n  'load',\n  'error',\n  'data',\n  'styledata',\n  'sourcedata',\n  'dataloading',\n  'styledataloading',\n  'sourcedataloading'\n];\n\nmodule.exports = events;\n","// @flow\n\nfunction capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nmodule.exports = capitalizeFirstLetter;\n","const isArraysEqual = (arr1 = [], arr2 = []) => {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let index = 0; index < arr1.length; index += 1) {\n    if (arr1[index] !== arr2[index]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport default isArraysEqual;\n","// @flow\n\ntype KV = {\n  [string]: any\n};\n\nconst diff = (newProps: KV = {}, prevProps: KV = {}) => {\n  const keys = new Set([...Object.keys(newProps), ...Object.keys(prevProps)]);\n  return [...keys].reduce((acc, key: string) => {\n    const value = newProps[key];\n    if (value !== prevProps[key]) {\n      acc.push([key, value]);\n    }\n    return acc;\n  }, []);\n};\n\nexport default diff;\n","// @flow\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\n\nconst queryRenderedFeatures = (\n  map: MapboxMap,\n  layerId: string,\n  position: [number, number],\n  radius: number\n) => {\n  const parameters = { layers: [layerId] };\n\n  if (radius) {\n    const bbox = [\n      [position[0] - radius, position[1] - radius],\n      [position[0] + radius, position[1] + radius]\n    ];\n\n    return map.queryRenderedFeatures(bbox, parameters);\n  }\n\n  return map.queryRenderedFeatures(position, parameters);\n};\n\nexport default queryRenderedFeatures;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type GeoJSONFeature from 'mapbox-gl/src/util/vectortile_to_geojson';\nimport type { LayerSpecification } from 'mapbox-gl/src/style-spec/types';\nimport type { MapMouseEvent, MapTouchEvent } from 'mapbox-gl/src/ui/events';\n\nimport MapContext from '../MapContext';\nimport diff from '../../utils/diff';\nimport queryRenderedFeatures from '../../utils/queryRenderedFeatures';\n\nconst eventListeners = [\n  ['onClick', 'click'],\n  ['onHover', 'mousemove'],\n  ['onEnter', 'mouseenter'],\n  ['onLeave', 'mouseleave'],\n  ['onContextMenu', 'contextmenu']\n];\n\ntype InteractionEvent = { ...MapMouseEvent, features?: GeoJSONFeature[] };\n\ntype Props = {|\n  /** Mapbox GL Layer id */\n  id: string,\n\n  /** The id of an existing layer to insert the new layer before. */\n  before?: string,\n\n  /**\n   * Called when the layer is clicked.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onClick?: (event: InteractionEvent) => any,\n\n  /**\n   * Called when the layer is hovered over.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onHover?: (event: InteractionEvent) => any,\n\n  /**\n   * Called when the layer feature is entered.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onEnter?: (event: InteractionEvent) => any,\n\n  /**\n   * Called when the layer feature is leaved.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onLeave?: (event: InteractionEvent) => any,\n\n  /**\n   * Called when the layer is right-clicked.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onContextMenu?: (event: InteractionEvent) => any,\n\n  /**\n   * Radius to detect features around a clicked/hovered point\n   */\n  radius: number,\n\n  ...LayerSpecification\n|};\n\nclass Layer extends PureComponent<Props> {\n  $key: string;\n\n  $value: any;\n\n  _id: string;\n\n  _map: MapboxMap;\n\n  _onClick: (event: MapMouseEvent | MapTouchEvent) => void;\n\n  _onHover: (event: MapMouseEvent) => void;\n\n  _onEnter: (event: MapMouseEvent) => void;\n\n  _onLeave: (event: MapMouseEvent) => void;\n\n  _onContextMenu: (event: MapMouseEvent) => void;\n\n  static displayName = 'Layer';\n\n  static defaultProps = {\n    radius: 0\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._id = props.id;\n  }\n\n  componentDidMount() {\n    this._addLayer(this.props);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const map = this._map;\n    const { id, before, onClick, ...layer } = this.props;\n\n    if (\n      id !== prevProps.id ||\n      this.props.type !== prevProps.type ||\n      (prevProps.type !== 'background' &&\n        (this.props.source !== prevProps.source ||\n          // $FlowFixMe\n          this.props['source-layer'] !== prevProps['source-layer']))\n    ) {\n      this._id = id;\n      this._map.removeLayer(prevProps.id);\n      this._addLayer(this.props);\n      return;\n    }\n\n    // flowlint sketchy-null-string:off\n    if (before !== prevProps.before && before && map.getLayer(before)) {\n      map.moveLayer(this._id, before);\n    }\n    // flowlint sketchy-null-string:warn\n\n    if (layer.paint !== prevProps.paint) {\n      diff(layer.paint, prevProps.paint).forEach(([key, value]) => {\n        map.setPaintProperty(this._id, key, value);\n      });\n    }\n\n    if (layer.layout !== prevProps.layout) {\n      diff(layer.layout, prevProps.layout).forEach(([key, value]) => {\n        map.setLayoutProperty(this._id, key, value);\n      });\n    }\n\n    // $FlowFixMe\n    if (layer.filter !== prevProps.filter) {\n      if (!layer.filter) {\n        map.setFilter(this._id, undefined);\n      } else {\n        map.setFilter(this._id, layer.filter);\n      }\n    }\n\n    this._updateEventListeners(prevProps, this.props);\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._removeEventListeners(this.props);\n\n    if (this._map.getLayer(this._id)) {\n      this._map.removeLayer(this._id);\n    }\n  }\n\n  _addLayer = (props: Props) => {\n    const map = this._map;\n    const {\n      before,\n      radius,\n      onClick,\n      onHover,\n      onEnter,\n      onLeave,\n      onContextMenu,\n      ...layer\n    } = props;\n\n    // flowlint sketchy-null-string:off\n    if (before && map.getLayer(before)) {\n      map.addLayer(layer, before);\n    } else {\n      map.addLayer(layer);\n    }\n    // flowlint sketchy-null-string:warn\n\n    this._addEventListeners(props);\n  };\n\n  _addEventListeners = (props: Props) => {\n    eventListeners.forEach(([propName, eventName]) => {\n      const handlerName = `_${propName}`;\n      if (props[propName]) {\n        this._map.on(eventName, this._id, this[handlerName]);\n      }\n    });\n  };\n\n  _updateEventListeners = (prevProps: Props, props: Props) => {\n    eventListeners.forEach(([propName, eventName]) => {\n      const handlerName = `_${propName}`;\n\n      if (!props[propName] && prevProps[propName]) {\n        this._map.off(eventName, this._id, this[handlerName]);\n      }\n\n      if (props[propName] && !prevProps[propName]) {\n        this._map.on(eventName, this._id, this[handlerName]);\n      }\n    });\n  };\n\n  _removeEventListeners = (props: Props) => {\n    eventListeners.forEach(([propName, eventName]) => {\n      const handlerName = `_${propName}`;\n      if (props[propName]) {\n        this._map.off(eventName, this._id, this[handlerName]);\n      }\n    });\n  };\n\n  _onClick = (event: MapMouseEvent): void => {\n    const position = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onClick({ ...event, features });\n  };\n\n  _onHover = (event: MapMouseEvent): void => {\n    const position = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onHover({ ...event, features });\n  };\n\n  _onEnter = (event: MapMouseEvent): void => {\n    const position = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onEnter({ ...event, features });\n  };\n\n  _onLeave = (event: MapMouseEvent) => {\n    const position: [number, number] = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onLeave({ ...event, features });\n  };\n\n  _onContextMenu = (event: MapMouseEvent) => {\n    const position: [number, number] = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onContextMenu({ ...event, features });\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default Layer;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { CustomLayerInterface } from 'mapbox-gl/src/style/style_layer/custom_style_layer';\n\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** The id of an existing layer to insert the new layer before. */\n  before?: string,\n\n  /** Mapbox GL Custom Layer instance */\n  layer: CustomLayerInterface\n};\n\n/**\n * Custom layers allow a user to render directly into the map's GL context\n * using the map's camera.\n */\nclass CustomLayer extends PureComponent<Props> {\n  _id: string;\n\n  _map: MapboxMap;\n\n  static displayName = 'CustomLayer';\n\n  componentDidMount() {\n    const { layer, before } = this.props;\n\n    if (before && this._map.getLayer(before)) {\n      this._map.addLayer(layer, before);\n    } else {\n      this._map.addLayer(layer);\n    }\n\n    this._id = layer.id;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle() || !this._map.getLayer(this._id)) {\n      return;\n    }\n\n    this._map.removeLayer(this._id);\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default CustomLayer;\n","// @flow\n\nimport { Children, cloneElement } from 'react';\nimport type { Element } from 'react';\n\nimport Layer from '../components/Layer';\nimport CustomLayer from '../components/CustomLayer';\nimport type { Children as MapChildren } from '../components/MapGL';\n\ntype LayerLike = Element<typeof Layer> | Element<typeof CustomLayer>;\n\nconst LayerLikeTypes = [Layer, CustomLayer];\nconst isLayerLike = (child: Element<any>) =>\n  LayerLikeTypes.includes(child.type);\n\nconst getLayerId = (child: LayerLike): string =>\n  // $FlowFixMe\n  child.props.id || child.props.layer.id;\n\nconst forEachLayer = (fn, children: MapChildren) => {\n  Children.forEach(children, (child) => {\n    if (!child) return;\n    if (isLayerLike(child)) fn(child);\n    if (child.props && child.props.children)\n      forEachLayer(fn, child.props.children);\n  });\n};\n\nconst getLayerIds = (children: MapChildren): Array<string> => {\n  const layerIds = [];\n  forEachLayer((child) => {\n    if (!child.props.before) {\n      layerIds.push(getLayerId(child));\n    }\n  }, children);\n  return layerIds;\n};\n\nconst normalizeChildren = (children: MapChildren) => {\n  const layerIds = getLayerIds(children);\n  layerIds.shift();\n\n  const traverse = (_children: MapChildren) => {\n    if (typeof _children === 'function') {\n      return _children;\n    }\n\n    return Children.map(_children, (child: Element<any>) => {\n      if (!child) {\n        return child;\n      }\n\n      if (isLayerLike(child)) {\n        const before: string = child.props.before || layerIds.shift();\n        return cloneElement(child, { before });\n      }\n\n      if (child.props && child.props.children) {\n        return cloneElement(child, {\n          children: traverse(child.props.children)\n        });\n      }\n\n      return child;\n    });\n  };\n\n  const normalizedChildren = traverse(children);\n  return normalizedChildren;\n};\n\nexport default normalizeChildren;\n","// @flow\n\nimport { PureComponent, createElement, createRef } from 'react';\nimport type { ChildrenArray, Element, ElementRef } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxLngLatBoundsLike from 'mapbox-gl/src/geo/lng_lat_bounds';\nimport type { AnimationOptions } from 'mapbox-gl/src/ui/camera';\nimport type { StyleSpecification } from 'mapbox-gl/src/style-spec/types';\nimport type { MapMouseEvent, MapTouchEvent } from 'mapbox-gl/src/ui/events';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\nimport events from './events';\nimport capitalizeFirstLetter from '../../utils/capitalizeFirstLetter';\nimport isArraysEqual from '../../utils/isArraysEqual';\n\n/* eslint-disable import/no-cycle */\nimport normalizeChildren from '../../utils/normalizeChildren';\n\nimport type { EventProps } from './eventProps';\n\nexport type Viewport = {|\n  latitude: number,\n  longitude: number,\n  zoom: number,\n  pitch?: number,\n  bearing?: number\n|};\n\nexport const jumpTo = 'jumpTo';\nexport const easeTo = 'easeTo';\nexport const flyTo = 'flyTo';\n\nexport type ViewportChangeMethod = 'jumpTo' | 'easeTo' | 'flyTo';\nexport type ViewportChangeEvent = MapMouseEvent | MapTouchEvent;\n\nexport type Children = ChildrenArray<Element<any>>;\n\ntype Props = EventProps & {\n  /** container className */\n  className?: string,\n\n  /** container style */\n  style?: {\n    [CSSProperty: string]: any\n  },\n\n  /**\n   * The Mapbox style. A string url or a Mapbox GL style object.\n   */\n  mapStyle: string | StyleSpecification,\n\n  /** MapGL children as Sources, Layers, Controls, and custom Components */\n  children?: Children,\n\n  /**\n   * Mapbox API access token for mapbox-gl-js.\n   * Required when using Mapbox vector tiles/styles.\n   */\n  accessToken?: string,\n\n  /** The longitude of the center of the map. */\n  longitude: number,\n\n  /** The latitude of the center of the map. */\n  latitude: number,\n\n  /** The tile zoom level of the map. */\n  zoom: number,\n\n  /** Specify the bearing of the viewport */\n  bearing?: number,\n\n  /** Specify the pitch of the viewport */\n  pitch?: number,\n\n  /** The minimum zoom level of the map (0-22). */\n  minZoom?: number,\n\n  /** The maximum zoom level of the map (0-22). */\n  maxZoom?: number,\n\n  /**\n   * If `true`, the map's position (zoom, center latitude,\n   * center longitude, bearing, and pitch) will be synced\n   * with the hash fragment of the page's URL. For example,\n   * http://path/to/my/page.html#2.59/39.26/53.07/-24.1/60.\n   */\n  hash?: boolean,\n\n  /**\n   * The threshold, measured in degrees, that determines when\n   * the map's bearing (rotation) will snap to north. For\n   * example, with a  bearingSnap of 7, if the user rotates the\n   * map within 7 degrees of north, the map will automatically\n   * snap to exact north.\n   */\n  bearingSnap?: number,\n\n  /**\n   * If `false`, the map's pitch (tilt) control with \"drag to\n   * rotate\" interaction will be disabled.\n   */\n  pitchWithRotate?: boolean,\n\n  /** If `true`, an AttributionControl will be added to the map. */\n  attributionControl?: boolean,\n\n  /* A string representing the position of the Mapbox wordmark on the map. */\n  logoPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right',\n\n  /**\n   * If `true`, map creation will fail if the performance of Mapbox\n   * GL JS would be dramatically worse than expected (i.e. a software\n   * renderer would be used).\n   */\n  failIfMajorPerformanceCaveat?: boolean,\n\n  /**\n   * Mapbox WebGL context creation option.\n   * Useful when you want to export the canvas as a PNG.\n   */\n  preserveDrawingBuffer?: boolean,\n\n  /**\n   * If `true`, the gl context will be created with MSAA antialiasing,\n   * which can be useful for antialiasing custom layers. this is `false`\n   * by default as a performance optimization.\n   */\n  antialias?: boolean,\n\n  /**\n   * If `false`, the map won't attempt to re-request tiles once they\n   * expire per their HTTP `cacheControl`/`expires` headers.\n   */\n  refreshExpiredTiles?: boolean,\n\n  /** If set, the map will be constrained to the given bounds. */\n  maxBounds?: MapboxLngLatBoundsLike,\n\n  /**\n   * The initial bounds of the map. If bounds is specified,\n   * it overrides center and zoom constructor options.\n   * */\n  bounds?: MapboxLngLatBoundsLike,\n\n  /** If `true`, the \"scroll to zoom\" interaction is enabled. */\n  scrollZoom?: boolean | Object,\n\n  /** If `true`, the \"box zoom\" interaction is enabled */\n  boxZoom?: boolean,\n\n  /** If `true`, the \"drag to rotate\" interaction is enabled */\n  dragRotate?: boolean,\n\n  /** If `true`, the \"drag to pan\" interaction is enabled */\n  dragPan?: boolean,\n\n  /** If `true`, keyboard shortcuts are enabled */\n  keyboard?: boolean,\n\n  /** If `true`, the \"double click to zoom\" interaction is enabled */\n  doubleClickZoom?: boolean,\n\n  /**\n   * If `true`, the map will automatically resize\n   * when the browser window resizes.\n   */\n  trackResize?: boolean,\n\n  /**\n   * The maximum number of tiles stored in the tile cache for a given\n   * source. If omitted, the cache will be dynamically sized based on\n   * the current viewport.\n   */\n  maxTileCacheSize?: number,\n\n  /**\n   * If `true`, multiple copies of the world\n   * will be rendered, when zoomed out\n   */\n  renderWorldCopies?: boolean,\n\n  /**\n   * If specified, defines a CSS font-family for locally overriding\n   * generation of glyphs in the 'CJK Unified Ideographs' and\n   * 'Hangul Syllables' ranges. In these ranges, font settings from the\n   * map's style will be ignored, except for font-weight keywords\n   * (light/regular/medium/bold). The purpose of this option is to avoid\n   * bandwidth-intensive glyph server requests.\n   * (see https://www.mapbox.com/mapbox-gl-js/example/local-ideographs )\n   */\n  localIdeographFontFamily?: boolean,\n\n  /**\n   * A callback run before the Map makes a request for an external URL.\n   * The callback can be used to modify the url, set headers, or set the\n   * credentials property for cross-origin requests. Expected to return\n   * an object with a  url property and optionally  headers and\n   * credentials properties.\n   */\n  transformRequest?: (\n    url: string,\n    resourceType: string\n  ) => { url: string, headers?: Object, credentials?: string },\n\n  /**\n   * If true, Resource Timing API information will be collected for\n   * requests made by GeoJSON and Vector Tile web workers (this information\n   * is normally inaccessible from the main Javascript thread). Information\n   * will be returned in a resourceTiming property of relevant data events.\n   */\n  collectResourceTiming?: boolean,\n\n  /**\n   * Controls the duration of the fade-in/fade-out animation for label\n   * collisions, in milliseconds. This setting affects all symbol layers.\n   * This setting does not affect the duration of runtime styling transitions\n   * or raster tile cross-fading.\n   */\n  fadeDuration?: number,\n\n  /**\n   * If `true`, symbols from multiple sources can collide with each\n   * other during collision detection. If `false`, collision detection\n   * is run separately for the symbols in each source.\n   */\n  crossSourceCollisions?: boolean,\n\n  /**\n   * A patch to apply to the default localization table for UI strings,\n   * e.g. control tooltips. The `locale` object maps namespaced UI string IDs\n   * to translated strings in the target language;\n   * see `src/ui/default_locale.js` for an example with all supported\n   * string IDs. The object may specify all UI strings (thereby adding support\n   * for a new translation) or only a subset of strings (thereby patching\n   * the default translation table).\n   */\n  locale?: string,\n\n  /**\n   * `onViewportChange` callback is fired when the user interacted with the\n   * map. The object passed to the callback contains viewport properties\n   * such as `longitude`, `latitude`, `zoom` etc.\n   */\n  onViewportChange?: (viewport: Viewport) => void,\n\n  /**\n   * Map method that will be called after new viewport props are received.\n   */\n  viewportChangeMethod?: ViewportChangeMethod,\n\n  /**\n   * Options common to map movement methods that involve animation,\n   * controlling the duration and easing function of the animation.\n   * This options will be passed to the `viewportChangeMethod` call.\n   * (see https://docs.mapbox.com/mapbox-gl-js/api/#animationoptions)\n   */\n  viewportChangeOptions?: AnimationOptions,\n\n  /** The onLoad callback for the map */\n  onLoad?: Function,\n\n  /** Map cursor style as CSS value */\n  cursorStyle?: string,\n\n  /**\n   * Sets a Boolean indicating whether the map will render an outline around\n   * each tile and the tile ID. These tile boundaries are useful for debugging.\n   * */\n  showTileBoundaries?: boolean\n};\n\ntype State = {\n  loaded: boolean\n};\n\nclass MapGL extends PureComponent<Props, State> {\n  _map: MapboxMap;\n\n  _container: { current: null | ElementRef<'div'> };\n\n  static displayName = 'MapGL';\n\n  static defaultProps = {\n    children: null,\n    className: null,\n    style: null,\n    mapStyle: 'mapbox://styles/mapbox/light-v8',\n    accessToken: null,\n    bearing: 0,\n    pitch: 0,\n    minZoom: 0,\n    maxZoom: 22,\n    maxBounds: null,\n    bounds: null,\n    hash: false,\n    bearingSnap: 7,\n    pitchWithRotate: true,\n    attributionControl: true,\n    logoPosition: 'bottom-left',\n    failIfMajorPerformanceCaveat: false,\n    preserveDrawingBuffer: false,\n    antialias: false,\n    refreshExpiredTiles: true,\n    boxZoom: true,\n    scrollZoom: true,\n    dragRotate: true,\n    dragPan: true,\n    keyboard: true,\n    doubleClickZoom: true,\n    trackResize: true,\n    renderWorldCopies: true,\n    maxTileCacheSize: null,\n    onViewportChange: null,\n    onLoad: null,\n    localIdeographFontFamily: null,\n    transformRequest: null,\n    collectResourceTiming: false,\n    fadeDuration: 300,\n    crossSourceCollisions: true,\n    locale: null,\n    cursorStyle: null,\n    viewportChangeMethod: jumpTo,\n    viewportChangeOptions: null\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    if (mapboxgl) {\n      mapboxgl.accessToken = props.accessToken;\n    }\n\n    this._container = createRef();\n  }\n\n  state = {\n    loaded: false\n  };\n\n  componentDidMount() {\n    if (!mapboxgl) {\n      return;\n    }\n\n    const container = this._container.current;\n\n    const map: MapboxMap = new mapboxgl.Map({\n      container,\n      style: this.props.mapStyle,\n      interactive: !!this.props.onViewportChange,\n      center: [this.props.longitude, this.props.latitude],\n      zoom: this.props.zoom,\n      pitch: this.props.pitch,\n      bearing: this.props.bearing,\n      minZoom: this.props.minZoom,\n      maxZoom: this.props.maxZoom,\n      hash: this.props.hash,\n      bearingSnap: this.props.bearingSnap,\n      pitchWithRotate: this.props.pitchWithRotate,\n      attributionControl: this.props.attributionControl,\n      logoPosition: this.props.logoPosition,\n      failIfMajorPerformanceCaveat: this.props.failIfMajorPerformanceCaveat,\n      preserveDrawingBuffer: this.props.preserveDrawingBuffer,\n      antialias: this.props.antialias,\n      refreshExpiredTiles: this.props.refreshExpiredTiles,\n      maxBounds: this.props.maxBounds,\n      bounds: this.props.bounds,\n      scrollZoom: this.props.scrollZoom,\n      boxZoom: this.props.boxZoom,\n      dragRotate: this.props.dragRotate,\n      dragPan: this.props.dragPan,\n      keyboard: this.props.keyboard,\n      doubleClickZoom: this.props.doubleClickZoom,\n      trackResize: this.props.trackResize,\n      renderWorldCopies: this.props.renderWorldCopies,\n      maxTileCacheSize: this.props.maxTileCacheSize,\n      localIdeographFontFamily: this.props.localIdeographFontFamily,\n      transformRequest: this.props.transformRequest,\n      collectResourceTiming: this.props.collectResourceTiming,\n      fadeDuration: this.props.fadeDuration,\n      crossSourceCollisions: this.props.crossSourceCollisions,\n      locale: this.props.locale\n    });\n\n    this._map = map;\n\n    map.once('load', () => {\n      this.setState({ loaded: true }, this.props.onLoad);\n    });\n\n    if (this.props.onViewportChange) {\n      map.on('dragend', this._onViewportChange);\n      map.on('zoomend', this._onViewportChange);\n      map.on('rotateend', this._onViewportChange);\n      map.on('pitchend', this._onViewportChange);\n      map.on('boxzoomend', this._onViewportChange);\n    }\n\n    events.forEach((event) => {\n      const propName = `on${capitalizeFirstLetter(event)}`;\n      const prop = this.props[propName];\n      if (prop) {\n        if (Array.isArray(prop)) {\n          map.on(event, ...prop);\n        } else {\n          map.on(event, prop);\n        }\n      }\n    });\n\n    if (this.props.cursorStyle) {\n      map.getCanvas().style.cursor = this.props.cursorStyle;\n    }\n\n    if (this.props.showTileBoundaries) {\n      this._map.showTileBoundaries = this.props.showTileBoundaries;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this._updateMapViewport(prevProps, this.props);\n    this._updateMapStyle(prevProps, this.props);\n    this._updateMapSize(prevProps, this.props);\n    this._updateMapEventListeners(prevProps, this.props);\n\n    if (!prevProps.cursorStyle !== this.props.cursorStyle) {\n      this._map.getCanvas().style.cursor = this.props.cursorStyle;\n    }\n\n    if (prevProps.showTileBoundaries !== this.props.showTileBoundaries) {\n      this._map.showTileBoundaries = !!this.props.showTileBoundaries;\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._map) {\n      this._map.remove();\n    }\n  }\n\n  // External apps can access map this way\n  getMap() {\n    return this._map;\n  }\n\n  /**\n   * Update Map event listeners from newProps\n   *\n   * @private\n   * @param {Props} prevProps\n   * @param {Props} newProps\n   */\n  _updateMapEventListeners(prevProps: Props, newProps: Props): void {\n    events.forEach((event) => {\n      const propName = `on${capitalizeFirstLetter(event)}`;\n      const prevEventHandler = prevProps[propName];\n      const newEventHandler = newProps[propName];\n      if (!((Array.isArray(prevEventHandler) &&\n          Array.isArray(newEventHandler) &&\n          isArraysEqual(prevEventHandler, newEventHandler)) ||\n          prevEventHandler === newEventHandler)) {\n        if (prevEventHandler) {\n          if (Array.isArray(prevEventHandler)) {\n            this._map.off(event, ...prevEventHandler);\n          } else {\n            this._map.off(event, prevEventHandler);\n          }\n        }\n        if (newEventHandler) {\n          if (Array.isArray(newEventHandler)) {\n            this._map.on(event, ...newEventHandler);\n          } else {\n            this._map.on(event, newEventHandler);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Update Map style from newProps\n   *\n   * @private\n   * @param {Props} prevProps\n   * @param {Props} newProps\n   */\n  _updateMapStyle(prevProps: Props, newProps: Props): void {\n    const newMapStyle = newProps.mapStyle;\n    const prevMapStyle = prevProps.mapStyle;\n\n    if (newMapStyle !== prevMapStyle) {\n      this.setState({ loaded: false }, () => {\n        this._map.setStyle(newMapStyle);\n        this._map.once('style.load', () => this.setState({ loaded: true }));\n      });\n    }\n  }\n\n  /**\n   * Update Map viewport from newProps\n   *\n   * @private\n   * @param {Props} prevProps\n   * @param {Props} newProps\n   */\n  _updateMapViewport(prevProps: Props, newProps: Props): void {\n    const map: MapboxMap = this._map;\n    const center = map.getCenter();\n\n    const viewportChanged =\n      (newProps.latitude !== prevProps.latitude &&\n        newProps.latitude !== center.lat) ||\n      (newProps.longitude !== prevProps.longitude &&\n        newProps.longitude !== center.lng) ||\n      (newProps.zoom !== prevProps.zoom && newProps.zoom !== map.getZoom()) ||\n      (newProps.pitch !== prevProps.pitch &&\n        newProps.pitch !== map.getPitch()) ||\n      (newProps.bearing !== prevProps.bearing &&\n        newProps.bearing !== map.getBearing());\n\n    if (!viewportChanged) {\n      return;\n    }\n\n    const viewport = {\n      center: [newProps.longitude, newProps.latitude],\n      zoom: newProps.zoom,\n      pitch: newProps.pitch,\n      bearing: newProps.bearing\n    };\n\n    const { viewportChangeMethod, viewportChangeOptions } = this.props;\n    const options = { ...viewportChangeOptions, ...viewport };\n\n    switch (viewportChangeMethod) {\n      case flyTo:\n        map.flyTo(options);\n        break;\n      case jumpTo:\n        map.jumpTo(options);\n        break;\n      case easeTo:\n        map.easeTo(options);\n        break;\n      default:\n        throw new Error('Unknown viewport change method');\n    }\n  }\n\n  /**\n   * Update Map size from newProps\n   *\n   * @private\n   * @param {Props} prevProps\n   * @param {Props} newProps\n   */\n  _updateMapSize(prevProps: Props, newProps: Props): void {\n    const sizeChanged =\n      (prevProps.style && prevProps.style.height) !==\n        (newProps.style && newProps.style.height) ||\n      (prevProps.style && prevProps.style.width) !==\n        (newProps.style && newProps.style.width);\n\n    if (!sizeChanged) {\n      return;\n    }\n\n    this._map.resize();\n  }\n\n  /**\n   * fires `onViewportChange` callback when the user interacted with the map.\n   *\n   * @private\n   * @param {ViewportChangeEvent} event\n   */\n  _onViewportChange = (event: ViewportChangeEvent): void => {\n    if (!event.originalEvent) {\n      return;\n    }\n\n    const map = this._map;\n\n    const { lng, lat } = map.getCenter();\n    const zoom = map.getZoom();\n    const pitch = map.getPitch();\n    const bearing = map.getBearing();\n\n    const viewport: Viewport = {\n      latitude: lat,\n      longitude: lng,\n      zoom,\n      pitch,\n      bearing\n    };\n\n    // $FlowFixMe\n    this.props.onViewportChange(viewport);\n  };\n\n  render() {\n    const { loaded } = this.state;\n    const { className, style } = this.props;\n\n    const children = this.props.children\n      ? normalizeChildren(this.props.children)\n      : null;\n\n    return createElement(\n      MapContext.Provider,\n      { value: this._map },\n      createElement(\n        'div',\n        {\n          ref: this._container,\n          style,\n          className\n        },\n        loaded && children\n      )\n    );\n  }\n}\n\nexport default MapGL;\n","// @flow\nimport type {\n  SourceSpecification,\n  RasterSourceSpecification,\n  RasterDEMSourceSpecification,\n  VectorSourceSpecification,\n  GeoJSONSourceSpecification,\n  ImageSourceSpecification,\n  VideoSourceSpecification\n} from 'mapbox-gl/src/style-spec/types';\n\nexport default (props: SourceSpecification): SourceSpecification => {\n  switch (props.type) {\n    case 'vector': {\n      const source: VectorSourceSpecification = { type: 'vector', ...props };\n      return source;\n    }\n    case 'raster': {\n      const source: RasterSourceSpecification = { type: 'raster', ...props };\n      return source;\n    }\n    case 'raster-dem': {\n      const source: RasterDEMSourceSpecification = {\n        type: 'raster-dem',\n        ...props\n      };\n      return source;\n    }\n    case 'geojson': {\n      const source: GeoJSONSourceSpecification = { type: 'geojson', ...props };\n      return source;\n    }\n    case 'video': {\n      const source: VideoSourceSpecification = { type: 'video', ...props };\n      return source;\n    }\n    case 'image': {\n      const source: ImageSourceSpecification = { type: 'image', ...props };\n      return source;\n    }\n    default:\n      throw new Error(`Unknown type for '${props.id}' Source`);\n  }\n};\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { ChildrenArray, Element } from 'react';\nimport type {\n  SourceSpecification,\n  RasterSourceSpecification,\n  VectorSourceSpecification,\n  GeoJSONSourceSpecification,\n  ImageSourceSpecification\n} from 'mapbox-gl/src/style-spec/types';\n\nimport MapContext from '../MapContext';\nimport Layer from '../Layer';\n\n/* eslint-disable import/no-cycle */\nimport isArraysEqual from '../../utils/isArraysEqual';\nimport validateSource from '../../utils/validateSource';\n\nexport type TileSourceSpecification =\n  | VectorSourceSpecification\n  | RasterSourceSpecification;\n\nexport type Props = {\n  /** Mapbox GL Source */\n  ...SourceSpecification,\n\n  /** Mapbox GL Source id */\n  id: string,\n\n  /** Layers */\n  children?: ChildrenArray<Element<typeof Layer>>\n};\n\ntype State = {\n  loaded: boolean\n};\n\nclass Source extends PureComponent<Props, State> {\n  _map: MapboxMap;\n\n  static displayName = 'Source';\n\n  state = {\n    loaded: false\n  };\n\n  componentDidMount() {\n    const { id, children, ...restSourceProps } = this.props;\n    const source = validateSource((restSourceProps: any));\n\n    this._map.addSource(id, source);\n    this._map.on('sourcedata', this._onSourceData);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {\n      id: prevId,\n      children: prevChildren,\n      ...prevSourceProps\n    } = prevProps;\n    const prevSource = validateSource((prevSourceProps: any));\n\n    const { id, children, ...restSourceProps } = this.props;\n    const source = validateSource((restSourceProps: any));\n\n    if (id !== prevId || source.type !== prevSource.type) {\n      this._map.removeSource(prevId);\n      this._map.addSource(id, source);\n      return;\n    }\n\n    if (source.type === 'geojson' && prevSource.type === 'geojson') {\n      this._updateGeoJSONSource(id, prevSource, source);\n      return;\n    }\n\n    if (source.type === 'image' && prevSource.type === 'image') {\n      this._updateImageSource(id, prevSource, source);\n      return;\n    }\n\n    if (source.type === 'vector' && prevSource.type === 'vector') {\n      this._updateTileSource(id, prevSource, source);\n      return;\n    }\n\n    if (source.type === 'raster' && prevSource.type === 'raster') {\n      this._updateTileSource(id, prevSource, source);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._removeSource();\n  }\n\n  _onSourceData = () => {\n    if (!this._map.isSourceLoaded(this.props.id)) {\n      return;\n    }\n\n    this._map.off('sourcedata', this._onSourceData);\n    this.setState({ loaded: true });\n  };\n\n  _updateGeoJSONSource = (\n    id: string,\n    prevSource: GeoJSONSourceSpecification,\n    newSource: GeoJSONSourceSpecification\n  ) => {\n    if (newSource.data !== prevSource.data) {\n      const source = this._map.getSource(id);\n\n      if (source !== undefined) {\n        source.setData(newSource.data);\n      }\n    }\n  };\n\n  _updateImageSource = (\n    id: string,\n    prevSource: ImageSourceSpecification,\n    newSource: ImageSourceSpecification\n  ) => {\n    if (\n      newSource.url !== prevSource.url ||\n      newSource.coordinates !== prevSource.coordinates\n    ) {\n      const source = this._map.getSource(id);\n      if (source !== undefined) {\n        source.updateImage(newSource);\n      }\n    }\n  };\n\n  // https://github.com/mapbox/mapbox-gl-js/pull/8048\n  _updateTileSource = (\n    id: string,\n    prevSource: TileSourceSpecification,\n    newSource: TileSourceSpecification\n  ) => {\n    if (\n      newSource.url === prevSource.url &&\n      isArraysEqual(newSource.tiles, prevSource.tiles)\n    ) {\n      return;\n    }\n\n    const source = this._map.getSource(id);\n\n    /* eslint-disable no-underscore-dangle */\n    if (source._tileJSONRequest) {\n      source._tileJSONRequest.cancel();\n    }\n\n    source.url = newSource.url;\n    source.scheme = newSource.scheme;\n    source._options = { ...source._options, ...newSource };\n    /* eslint-enable no-underscore-dangle */\n\n    const sourceCache = this._map.style.sourceCaches[id];\n    if (sourceCache) {\n      sourceCache.clearTiles();\n    }\n\n    source.load();\n  };\n\n  _removeSource = () => {\n    const { id } = this.props;\n    if (this._map.getSource(id)) {\n      const { layers } = this._map.getStyle();\n      if (layers) {\n        layers.forEach((layer) => {\n          if (layer.source === id) {\n            this._map.removeLayer(layer.id);\n          }\n        });\n      }\n\n      this._map.removeSource(id);\n    }\n  };\n\n  render() {\n    const { loaded } = this.state;\n    const { children } = this.props;\n\n    return createElement(MapContext.Consumer, {}, (map: ?MapboxMap) => {\n      if (map) {\n        this._map = map;\n      }\n\n      // $FlowFixMe\n      return loaded && children;\n    });\n  }\n}\n\nexport default Source;\n","// @flow\n\nimport { createPortal } from 'react-dom';\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxPopup from 'mapbox-gl/src/ui/popup';\nimport type MapboxLngLatBoundsLike from 'mapbox-gl/src/geo/lng_lat_bounds';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /** Popup content. */\n  children: React$Node,\n\n  /** The longitude of the center of the popup. */\n  longitude: number,\n\n  /** The latitude of the center of the popup. */\n  latitude: number,\n\n  /*\n   * If true, a close button will appear\n   * in the top right corner of the popup.\n   */\n  closeButton?: boolean,\n\n  /** If true, the popup will closed when the map is clicked. */\n  closeOnClick?: boolean,\n\n  /** The onClose callback is fired when the popup closed. */\n  onClose?: Function,\n\n  /*\n   * A string indicating the part of the Popup\n   * that should be positioned closest to the coordinate.\n   * */\n  anchor?:\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-left'\n    | 'top-right'\n    | 'bottom-left'\n    | 'bottom-right',\n\n  /**\n   * The offset in pixels as a `PointLike` object to apply\n   * relative to the element's center. Negatives indicate left and up.\n   */\n  offset?: MapboxLngLatBoundsLike,\n\n  /** The className of the popup */\n  className?: string,\n\n  /** A string that sets the CSS property of the popup's maximum width. */\n  maxWidth?: string\n};\n\nclass Popup extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _el: HTMLDivElement;\n\n  _popup: MapboxPopup;\n\n  static displayName = 'Popup';\n\n  static defaultProps = {\n    closeButton: true,\n    closeOnClick: true,\n    onClose: null,\n    anchor: null,\n    offset: null,\n    className: null,\n    maxWidth: '240px'\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    const {\n      longitude,\n      latitude,\n      offset,\n      closeButton,\n      closeOnClick,\n      onClose,\n      anchor,\n      className,\n      maxWidth\n    } = this.props;\n\n    this._popup = new mapboxgl.Popup({\n      offset,\n      closeButton,\n      closeOnClick,\n      anchor,\n      className,\n      maxWidth\n    });\n\n    this._popup.setDOMContent(this._el);\n    this._popup.setLngLat([longitude, latitude]).addTo(this._map);\n\n    if (onClose) {\n      this._popup.on('close', onClose);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const positionChanged =\n      prevProps.latitude !== this.props.latitude ||\n      prevProps.longitude !== this.props.longitude;\n\n    if (positionChanged) {\n      this._popup.setLngLat([this.props.longitude, this.props.latitude]);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._popup.remove();\n  }\n\n  getPopup() {\n    return this._popup;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return createPortal(this.props.children, this._el);\n    });\n  }\n}\n\nexport default Popup;\n","// @flow\n\nimport { createPortal } from 'react-dom';\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxMarker from 'mapbox-gl/src/ui/marker';\nimport type LngLat from 'mapbox-gl/src/geo/lng_lat';\nimport type { PointLike } from '@mapbox/point-geometry';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /** Marker content */\n  children: React$Node,\n\n  /**\n   * A string indicating the part of the Marker\n   * that should be positioned closest to the coordinate\n   */\n  anchor:\n    | 'center'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-left'\n    | 'top-right'\n    | 'bottom-left'\n    | 'bottom-right',\n\n  /** The longitude of the center of the marker. */\n  longitude: number,\n\n  /** The latitude of the center of the marker. */\n  latitude: number,\n\n  /**\n   * The offset in pixels as a `PointLike` object to apply\n   * relative to the element's center. Negatives indicate left and up.\n   */\n  offset?: PointLike,\n\n  /**\n   * Boolean indicating whether or not a marker is able to be dragged\n   * to a new position on the map.\n   */\n  draggable?: boolean,\n\n  /**\n   * The rotation angle of the marker in degrees, relative to its\n   * respective `rotationAlignment` setting. A positive value will\n   * rotate the marker clockwise.\n   */\n  rotation: number,\n\n  /**\n   * map aligns the `Marker` to the plane of the map. `viewport`\n   * aligns the  Marker to the plane of the viewport. `auto` automatically\n   * matches the value of `rotationAlignment`.\n   */\n  pitchAlignment: string,\n\n  /**\n   * map aligns the `Marker`'s rotation relative to the map, maintaining\n   * a bearing as the map rotates. `viewport` aligns the `Marker`'s rotation\n   * relative to the viewport, agnostic to map rotations.\n   * `auto` is equivalent to `viewport`.\n   */\n  rotationAlignment: string,\n\n  /** Fired when the marker is clicked */\n  onClick?: () => any,\n\n  /** Fired when the marker is finished being dragged */\n  onDragEnd?: (lngLat: LngLat) => any,\n\n  /** Fired when the marker is finished being dragged */\n  onDragStart?: (lngLat: LngLat) => any,\n\n  /** Fired when the marker is dragged */\n  onDrag?: (lngLat: LngLat) => any\n};\n\nclass Marker extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _el: HTMLDivElement;\n\n  _marker: MapboxMarker;\n\n  static displayName = 'Marker';\n\n  static defaultProps = {\n    anchor: 'center',\n    offset: null,\n    draggable: false,\n    rotation: 0,\n    pitchAlignment: 'auto',\n    rotationAlignment: 'auto'\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    const {\n      longitude,\n      latitude,\n      onClick,\n      onDragEnd,\n      onDragStart,\n      onDrag\n    } = this.props;\n\n    this._marker = new mapboxgl.Marker({\n      element: this._el,\n      anchor: this.props.anchor,\n      draggable: this.props.draggable,\n      offset: this.props.offset,\n      rotation: this.props.rotation,\n      pitchAlignment: this.props.pitchAlignment,\n      rotationAlignment: this.props.rotationAlignment\n    });\n\n    this._marker.setLngLat([longitude, latitude]).addTo(this._map);\n\n    if (onClick) {\n      this._el.addEventListener('click', onClick);\n    }\n\n    if (onDragEnd) {\n      this._marker.on('dragend', this._onDragEnd);\n    }\n\n    if (onDragStart) {\n      this._marker.on('dragstart', this._onDragStart);\n    }\n\n    if (onDrag) {\n      this._marker.on('drag', this._onDrag);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const positionChanged =\n      prevProps.latitude !== this.props.latitude ||\n      prevProps.longitude !== this.props.longitude;\n\n    if (positionChanged) {\n      this._marker.setLngLat([this.props.longitude, this.props.latitude]);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    if (this.props.onClick) {\n      this._el.removeEventListener('click', this.props.onClick);\n    }\n\n    this._marker.remove();\n  }\n\n  getMarker() {\n    return this._marker;\n  }\n\n  _onDragEnd = (): void => {\n    // $FlowFixMe\n    this.props.onDragEnd(this._marker.getLngLat());\n  };\n\n  _onDragStart = (): void => {\n    // $FlowFixMe\n    this.props.onDragStart(this._marker.getLngLat());\n  };\n\n  _onDrag = (): void => {\n    // $FlowFixMe\n    this.props.onDrag(this._marker.getLngLat());\n  };\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return createPortal(this.props.children, this._el);\n    });\n  }\n}\n\nexport default Marker;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\n\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** Unique id of the feature. */\n  id: string | number,\n\n  /** The Id of the vector source or GeoJSON source for the feature. */\n  source: string,\n\n  /** For vector tile sources, the sourceLayer is required. */\n  sourceLayer: string,\n\n  /** A set of key-value pairs. The values should be valid JSON types. */\n  state: Object\n};\n\n/**\n * A `FeatureState` component sets the state of a feature.\n */\nclass FeatureState extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { id, source, sourceLayer, state } = this.props;\n    map.setFeatureState({ id, source, sourceLayer }, state);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const map = this._map;\n    const { id, source, sourceLayer, state } = this.props;\n\n    if (\n      id !== prevProps.id ||\n      source !== prevProps.source ||\n      sourceLayer !== prevProps.sourceLayer ||\n      state !== prevProps.state\n    ) {\n      map.removeFeatureState({\n        id: prevProps.id,\n        source: prevProps.source,\n        sourceLayer: prevProps.sourceLayer\n      });\n\n      map.setFeatureState({ id, source, sourceLayer }, state);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    const { id, source, sourceLayer } = this.props;\n    this._map.removeFeatureState({ id, source, sourceLayer });\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default FeatureState;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { StyleImageInterface } from 'mapbox-gl/src/style/style_image';\n\nimport MapContext from '../MapContext';\n\ntype MapboxImage =\n  | HTMLImageElement\n  | ImageData\n  | { width: number, height: number, data: Uint8Array | Uint8ClampedArray }\n  | StyleImageInterface;\n\ntype Props = {|\n  /** The ID of the image. */\n  id: string,\n\n  /**\n   * The image as an `HTMLImageElement`, `ImageData`, object with `width`,\n   * `height`, and `data` properties with the same format as `ImageData`\n   * or image url string\n   * */\n  image: MapboxImage | string,\n\n  /** The ratio of pixels in the image to physical pixels on the screen */\n  pixelRatio?: number,\n\n  /** Whether the image should be interpreted as an SDF image */\n  sdf?: boolean\n|};\n\nclass Image extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _id: string;\n\n  static defaultProps = {\n    pixelRatio: 1,\n    sdf: false\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._id = props.id;\n  }\n\n  componentDidMount() {\n    const { image, pixelRatio, sdf } = this.props;\n    this._loadImage(image, data =>\n      this._map.addImage(this._id, data, { pixelRatio, sdf })\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { id, image, pixelRatio, sdf } = this.props;\n\n    if (\n      id !== prevProps.id ||\n      sdf !== prevProps.sdf ||\n      pixelRatio !== prevProps.pixelRatio\n    ) {\n      this._id = id;\n      this._map.removeImage(prevProps.id);\n      this._loadImage(image, data =>\n        this._map.addImage(this._id, data, { pixelRatio, sdf })\n      );\n\n      return;\n    }\n\n    if (image !== prevProps.image) {\n      this._loadImage(image, data => this._map.updateImage(this._id, data));\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle() || !this._map.hasImage(this._id)) {\n      return;\n    }\n\n    this._map.removeImage(this._id);\n  }\n\n  _loadImage = (image: MapboxImage | string, callback: MapboxImage => void) => {\n    if (typeof image === 'string') {\n      this._map.loadImage(image, (error, data) => {\n        if (error) throw error;\n        callback(data);\n      });\n\n      return;\n    }\n\n    callback(image);\n  };\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default Image;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxAttributionControl from 'mapbox-gl/src/ui/control/attribution_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /**\n   * If `true` force a compact attribution that shows the full\n   * attribution on mouse hover, or if  false force the full attribution\n   * control. The default is a responsive attribution that collapses when\n   * the map is less than 640 pixels wide.\n   */\n  compact: boolean,\n\n  /* String or strings to show in addition to any other attributions. */\n  customAttribution: string | Array<string>,\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * An `AttributionControl` control presents the map's attribution information.\n */\nclass AttributionControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxAttributionControl;\n\n  static defaultProps = {\n    position: 'bottom-right'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { compact, customAttribution, position } = this.props;\n\n    const control: MapboxAttributionControl = new mapboxgl.AttributionControl({\n      compact,\n      customAttribution\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default AttributionControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxFullscreenControl from 'mapbox-gl/src/ui/control/fullscreen_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /**\n   * container is the compatible DOM element which should be\n   * made full screen. By default, the map container element\n   * will be made full screen.\n   */\n  container: string,\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * A `FullscreenControl` control contains a button for toggling the map in\n * and out of fullscreen mode.\n */\nclass FullscreenControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxFullscreenControl;\n\n  static defaultProps = {\n    position: 'top-right'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { container, position } = this.props;\n\n    const control: MapboxFullscreenControl = new mapboxgl.FullscreenControl({\n      container\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default FullscreenControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxGeolocateControl from 'mapbox-gl/src/ui/control/geolocate_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /* A Geolocation API PositionOptions object. */\n  positionOptions: PositionOptions,\n\n  /**\n   * A `fitBounds` options object to use when the map is\n   * panned and zoomed to the user's location.\n   */\n  fitBoundsOptions: Object,\n\n  /**\n   * If `true` the Geolocate Control becomes a toggle button and when active\n   * the map will receive updates to the user's location as it changes.\n   */\n  trackUserLocation: boolean,\n\n  /**\n   * By default a dot will be shown on the map at the user's location.\n   * Set to `false` to disable.\n   */\n  showUserLocation: boolean,\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right',\n\n  /**\n   * Fired when the Geolocate Control changes to the background state.\n   */\n  onTrackUserLocationEnd?: Function,\n\n  /**\n   * Fired when the Geolocate Control changes to the active lock state,\n   */\n  onTrackUserLocationStart?: Function,\n\n  /**\n   * Fired on each Geolocation API position update which returned as an error.\n   */\n  onError?: Function,\n\n  /**\n   * Fired on each Geolocation API position update which returned as success.\n   */\n  onGeolocate?: Function\n};\n\n/**\n * A `GeolocateControl` control provides a button that uses the browser's\n * geolocation API to locate the user on the map.\n */\nclass GeolocateControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxGeolocateControl;\n\n  static defaultProps = {\n    positionOptions: { enableHighAccuracy: false, timeout: 6000 },\n    fitBoundsOptions: { maxZoom: 15 },\n    trackUserLocation: false,\n    showUserLocation: true\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const {\n      positionOptions,\n      fitBoundsOptions,\n      trackUserLocation,\n      showUserLocation,\n      position,\n      onTrackUserLocationEnd,\n      onTrackUserLocationStart,\n      onError,\n      onGeolocate\n    } = this.props;\n\n    const control: MapboxGeolocateControl = new mapboxgl.GeolocateControl({\n      positionOptions,\n      fitBoundsOptions,\n      trackUserLocation,\n      showUserLocation\n    });\n\n    if (onTrackUserLocationEnd) {\n      control.on('trackuserlocationend', onTrackUserLocationEnd);\n    }\n\n    if (onTrackUserLocationStart) {\n      control.on('trackuserlocationstart', onTrackUserLocationStart);\n    }\n\n    if (onError) {\n      control.on('error', onError);\n    }\n\n    if (onGeolocate) {\n      control.on('geolocate', onGeolocate);\n    }\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default GeolocateControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxNavigationControl from 'mapbox-gl/src/ui/control/navigation_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /** If true the compass button is included. */\n  showCompass: boolean,\n\n  /** If true the zoom-in and zoom-out buttons are included. */\n  showZoom: boolean,\n\n  /**\n   * If true the pitch is visualized by rotating X-axis of compass\n   * and pitch will reset by clicking on the compass.\n   */\n  visualizePitch: boolean,\n\n  /** A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * A `NavigationControl` control contains zoom buttons and a compass.\n */\nclass NavigationControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxNavigationControl;\n\n  static defaultProps = {\n    showCompass: true,\n    showZoom: true,\n    visualizePitch: false,\n    position: 'top-right'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { showCompass, showZoom, visualizePitch, position } = this.props;\n\n    const control: MapboxNavigationControl = new mapboxgl.NavigationControl({\n      showCompass,\n      showZoom,\n      visualizePitch\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default NavigationControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxScaleControl from 'mapbox-gl/src/ui/control/scale_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /* The maximum length of the scale control in pixels. */\n  maxWidth: number,\n\n  /* Unit of the distance. */\n  unit: 'imperial' | 'metric' | 'nautical',\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * A `ScaleControl` control displays the ratio of a distance on the map\n * to the corresponding distance on the ground.\n */\nclass ScaleControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxScaleControl;\n\n  static defaultProps = {\n    position: 'bottom-right',\n    unit: 'metric'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { maxWidth, unit, position } = this.props;\n\n    const control: MapboxScaleControl = new mapboxgl.ScaleControl({\n      maxWidth,\n      unit\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default ScaleControl;\n","/**\n * Create a new [Mapbox GL JS plugin](https://www.mapbox.com/blog/build-mapbox-gl-js-plugins/) that\n * modifies the layers of the map style to use the 'text-field' that matches the browser language.\n * @constructor\n * @param {object} options - Options to configure the plugin.\n * @param {string[]} [options.supportedLanguages] - List of supported languages\n * @param {Function} [options.languageTransform] - Custom style transformation to apply\n * @param {RegExp} [options.languageField=/^\\{name/] - RegExp to match if a text-field is a language field\n * @param {Function} [options.getLanguageField] - Given a language choose the field in the vector tiles\n * @param {string} [options.languageSource] - Name of the source that contains the different languages.\n * @param {string} [options.defaultLanguage] - Name of the default language to initialize style after loading.\n * @param {string[]} [options.excludedLayerIds] - Name of the layers that should be excluded from translation.\n */\nfunction MapboxLanguage(options) {\n  options = Object.assign({}, options);\n  if (!(this instanceof MapboxLanguage)) {\n    throw new Error('MapboxLanguage needs to be called with the new keyword');\n  }\n\n  this.setLanguage = this.setLanguage.bind(this);\n  this._initialStyleUpdate = this._initialStyleUpdate.bind(this);\n\n  this._defaultLanguage = options.defaultLanguage;\n  this._isLanguageField = options.languageField || /^\\{name/;\n  this._getLanguageField = options.getLanguageField || function nameField(language) {\n    return language === 'mul' ? '{name}' : '{name_' + language + '}';\n  };\n  this._languageSource = options.languageSource || null;\n  this._languageTransform = options.languageTransform || function (style, language) {\n    if (language === 'ar') {\n      return noSpacing(style);\n    } else {\n      return standardSpacing(style);\n    }\n  };\n  this._excludedLayerIds = options.excludedLayerIds || [];\n  this.supportedLanguages = options.supportedLanguages || ['ar', 'en', 'es', 'fr', 'de', 'ja', 'ko', 'mul', 'pt', 'ru', 'zh'];\n}\n\nfunction standardSpacing(style) {\n  var changedLayers = style.layers.map(function (layer) {\n    if (!(layer.layout || {})['text-field']) return layer;\n    var spacing = 0;\n    if (layer['source-layer'] === 'state_label') {\n      spacing = 0.15;\n    }\n    if (layer['source-layer'] === 'marine_label') {\n      if (/-lg/.test(layer.id)) {\n        spacing = 0.25;\n      }\n      if (/-md/.test(layer.id)) {\n        spacing = 0.15;\n      }\n      if (/-sm/.test(layer.id)) {\n        spacing = 0.1;\n      }\n    }\n    if (layer['source-layer'] === 'place_label') {\n      if (/-suburb/.test(layer.id)) {\n        spacing = 0.15;\n      }\n      if (/-neighbour/.test(layer.id)) {\n        spacing = 0.1;\n      }\n      if (/-islet/.test(layer.id)) {\n        spacing = 0.01;\n      }\n    }\n    if (layer['source-layer'] === 'airport_label') {\n      spacing = 0.01;\n    }\n    if (layer['source-layer'] === 'rail_station_label') {\n      spacing = 0.01;\n    }\n    if (layer['source-layer'] === 'poi_label') {\n      if (/-scalerank/.test(layer.id)) {\n        spacing = 0.01;\n      }\n    }\n    if (layer['source-layer'] === 'road_label') {\n      if (/-label-/.test(layer.id)) {\n        spacing = 0.01;\n      }\n      if (/-shields/.test(layer.id)) {\n        spacing = 0.05;\n      }\n    }\n    return Object.assign({}, layer, {\n      layout: Object.assign({}, layer.layout, {\n        'text-letter-spacing': spacing\n      })\n    });\n  });\n\n  return Object.assign({}, style, {\n    layers: changedLayers\n  });\n}\n\nfunction noSpacing(style) {\n  var changedLayers = style.layers.map(function (layer) {\n    if (!(layer.layout || {})['text-field']) return layer;\n    var spacing = 0;\n    return Object.assign({}, layer, {\n      layout: Object.assign({}, layer.layout, {\n        'text-letter-spacing': spacing\n      })\n    });\n  });\n\n  return Object.assign({}, style, {\n    layers: changedLayers\n  });\n}\n\nfunction isNameStringField(isLangField, property) {\n  return typeof property === 'string' && isLangField.test(property);\n}\n\nfunction isNameFunctionField(isLangField, property) {\n  return property.stops && property.stops.filter(function (stop) {\n    return isLangField.test(stop[1]);\n  }).length > 0;\n}\n\nfunction adaptPropertyLanguage(isLangField, property, languageFieldName) {\n  if (isNameStringField(isLangField, property)) return languageFieldName;\n  if (isNameFunctionField(isLangField, property)) {\n    var newStops = property.stops.map(function (stop) {\n      if (isLangField.test(stop[1])) {\n        return [stop[0], languageFieldName];\n      }\n      return stop;\n    });\n    return Object.assign({}, property, {\n      stops: newStops\n    });\n  }\n  return property;\n}\n\nfunction changeLayerTextProperty(isLangField, layer, languageFieldName, excludedLayerIds) {\n  if (layer.layout && layer.layout['text-field'] && excludedLayerIds.indexOf(layer.id) === -1) {\n    return Object.assign({}, layer, {\n      layout: Object.assign({}, layer.layout, {\n        'text-field': adaptPropertyLanguage(isLangField, layer.layout['text-field'], languageFieldName)\n      })\n    });\n  }\n  return layer;\n}\n\nfunction findStreetsSource(style) {\n  var sources = Object.keys(style.sources).filter(function (sourceName) {\n    var source = style.sources[sourceName];\n    return /mapbox-streets-v\\d/.test(source.url);\n  });\n  return sources[0];\n}\n\n/**\n * Explicitly change the language for a style.\n * @param {object} style - Mapbox GL style to modify\n * @param {string} language - The language iso code\n * @returns {object} the modified style\n */\nMapboxLanguage.prototype.setLanguage = function (style, language) {\n  if (this.supportedLanguages.indexOf(language) < 0) throw new Error('Language ' + language + ' is not supported');\n  var streetsSource = this._languageSource || findStreetsSource(style);\n  if (!streetsSource) return style;\n\n  var field = this._getLanguageField(language);\n  var isLangField = this._isLanguageField;\n  var excludedLayerIds = this._excludedLayerIds;\n  var changedLayers = style.layers.map(function (layer) {\n    if (layer.source === streetsSource) return changeLayerTextProperty(isLangField, layer, field, excludedLayerIds);\n    return layer;\n  });\n\n  var languageStyle = Object.assign({}, style, {\n    layers: changedLayers\n  });\n\n  return this._languageTransform(languageStyle, language);\n};\n\nMapboxLanguage.prototype._initialStyleUpdate = function () {\n  var style = this._map.getStyle();\n  var language = this._defaultLanguage || browserLanguage(this.supportedLanguages);\n\n  // We only update the style once\n  this._map.off('styledata', this._initialStyleUpdate);\n  this._map.setStyle(this.setLanguage(style, language));\n};\n\nfunction browserLanguage(supportedLanguages) {\n  var language = navigator.languages ? navigator.languages[0] : (navigator.language || navigator.userLanguage);\n  var parts = language.split('-');\n  var languageCode = language;\n  if (parts.length > 1) {\n    languageCode = parts[0];\n  }\n  if (supportedLanguages.indexOf(languageCode) > -1) {\n    return languageCode;\n  }\n  return null;\n}\n\nMapboxLanguage.prototype.onAdd = function (map) {\n  this._map = map;\n  this._map.on('styledata', this._initialStyleUpdate);\n  this._container = document.createElement('div');\n  return this._container;\n};\n\nMapboxLanguage.prototype.onRemove = function () {\n  this._map.off('styledata', this._initialStyleUpdate);\n  this._map = undefined;\n};\n\nfunction ie11Polyfill() {\n  if (typeof Object.assign != 'function') {\n    // Must be writable: true, enumerable: false, configurable: true\n    Object.defineProperty(Object, 'assign', {\n      // eslint-disable-next-line no-unused-vars\n      value: function assign(target, varArgs) { // .length of function is 2\n        // eslint-disable-next-line strict\n        'use strict';\n        if (target === null) { // TypeError if undefined or null\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var to = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var nextSource = arguments[index];\n\n          if (nextSource !== null) { // Skip over if undefined or null\n            for (var nextKey in nextSource) {\n              // Avoid bugs when hasOwnProperty is shadowed\n              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n        return to;\n      },\n      writable: true,\n      configurable: true\n    });\n  }\n}\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = MapboxLanguage;\n} else {\n  ie11Polyfill();\n  window.MapboxLanguage = MapboxLanguage;\n}\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxLanguageControl from '@mapbox/mapbox-gl-language/index';\n\nimport MapboxLanguage from '@mapbox/mapbox-gl-language';\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** List of supported languages */\n  supportedLanguages?: string[],\n\n  /** Custom style transformation to apply */\n  languageTransform?: Function,\n\n  /**\n   * RegExp to match if a text-field is a language field\n   * (optional, default /^\\{name/)\n   */\n  languageField?: RegExp,\n\n  /** Given a language choose the field in the vector tiles */\n  getLanguageField?: Function,\n\n  /** Name of the source that contains the different languages. */\n  languageSource?: string,\n\n  /** Name of the default language to initialize style after loading. */\n  defaultLanguage?: string,\n\n  /** Name of the language to set */\n  language?: string\n};\n\n/**\n * Adds support for switching the language of your map style.\n */\nclass LanguageControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxLanguageControl;\n\n  static defaultProps = {};\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const {\n      supportedLanguages,\n      languageTransform,\n      languageField,\n      getLanguageField,\n      languageSource,\n      defaultLanguage\n    } = this.props;\n\n    const control: MapboxLanguageControl = new MapboxLanguage({\n      supportedLanguages,\n      languageTransform,\n      languageField,\n      getLanguageField,\n      languageSource,\n      defaultLanguage\n    });\n\n    map.addControl(control);\n    this._control = control;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.language !== this.props.language) {\n      this._setLanguage();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  _setLanguage = () => {\n    const { language } = this.props;\n    const map = this._map;\n    const control = this._control;\n\n    if (language) {\n      map.setStyle(control.setLanguage(map.getStyle(), language));\n    }\n  };\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default LanguageControl;\n","var trafficLayers = [\n  {\n    'id': 'traffic-street-link-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 15,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          'has',\n          'congestion'\n        ],\n        [\n          'in',\n          'class',\n          'link',\n          'motorway_link',\n          'service',\n          'street'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            14,\n            2.5\n          ],\n          [\n            20,\n            15.5\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            14,\n            2\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-opacity': {\n        'base': 1,\n        'stops': [\n          [\n            15,\n            0\n          ],\n          [\n            16,\n            1\n          ]\n        ]\n      }\n    }\n  },\n  {\n    'id': 'traffic-secondary-tertiary-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 6,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          'has',\n          'congestion'\n        ],\n        [\n          'in',\n          'class',\n          'secondary',\n          'tertiary'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            9,\n            1.5\n          ],\n          [\n            18,\n            11\n          ],\n          [\n            20,\n            16.5\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            10,\n            0.5\n          ],\n          [\n            15,\n            5\n          ],\n          [\n            18,\n            11\n          ],\n          [\n            20,\n            14.5\n          ]\n        ]\n      },\n      'line-opacity': {\n        'base': 1,\n        'stops': [\n          [\n            13,\n            0\n          ],\n          [\n            14,\n            1\n          ]\n        ]\n      }\n    }\n  },\n  {\n    'id': 'traffic-primary-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 6,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          '==',\n          'class',\n          'primary'\n        ],\n        [\n          'has',\n          'congestion'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            10,\n            0.75\n          ],\n          [\n            15,\n            6\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.2,\n        'stops': [\n          [\n            10,\n            0\n          ],\n          [\n            12,\n            1.5\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            16\n          ]\n        ]\n      },\n      'line-opacity': {\n        'base': 1,\n        'stops': [\n          [\n            11,\n            0\n          ],\n          [\n            12,\n            1\n          ]\n        ]\n      }\n    }\n  },\n  {\n    'id': 'traffic-trunk-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 6,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          '==',\n          'class',\n          'trunk'\n        ],\n        [\n          'has',\n          'congestion'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            8,\n            0.5\n          ],\n          [\n            9,\n            2.25\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            17.5\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            7,\n            0\n          ],\n          [\n            9,\n            1\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-motorway-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 6,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          '==',\n          'class',\n          'motorway'\n        ],\n        [\n          'has',\n          'congestion'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            6,\n            0.5\n          ],\n          [\n            9,\n            3\n          ],\n          [\n            18,\n            16\n          ],\n          [\n            20,\n            20\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-opacity': 1,\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            7,\n            0\n          ],\n          [\n            9,\n            1.2\n          ],\n          [\n            11,\n            1.2\n          ],\n          [\n            18,\n            10\n          ],\n          [\n            20,\n            15.5\n          ]\n        ]\n      }\n    }\n  },\n  {\n    'id': 'traffic-primary',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-primary-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            10,\n            1\n          ],\n          [\n            15,\n            4\n          ],\n          [\n            20,\n            16\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.2,\n        'stops': [\n          [\n            10,\n            0\n          ],\n          [\n            12,\n            1.5\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            16\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-secondary-tertiary',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-secondary-tertiary-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            9,\n            0.5\n          ],\n          [\n            18,\n            9\n          ],\n          [\n            20,\n            14\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            10,\n            0.5\n          ],\n          [\n            15,\n            5\n          ],\n          [\n            18,\n            11\n          ],\n          [\n            20,\n            14.5\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-street-link',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-street-link-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            14,\n            1.5\n          ],\n          [\n            20,\n            13.5\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            14,\n            2\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-trunk',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-trunk-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            8,\n            0.75\n          ],\n          [\n            18,\n            11\n          ],\n          [\n            20,\n            15\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            7,\n            0\n          ],\n          [\n            9,\n            1\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-motorway',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-motorway-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            6,\n            0.5\n          ],\n          [\n            9,\n            1.5\n          ],\n          [\n            18,\n            14\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-opacity': 1,\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            7,\n            0\n          ],\n          [\n            9,\n            1.2\n          ],\n          [\n            11,\n            1.2\n          ],\n          [\n            18,\n            10\n          ],\n          [\n            20,\n            15.5\n          ]\n        ]\n      }\n    }\n  }\n];\n\nfunction addLayers(style, layers, before) {\n  for (var i = 0; i < style.layers.length; i++) {\n    var layer = style.layers[i];\n    if (before === layer.id) {\n      var newLayers = style.layers.slice(0, i).concat(layers).concat(style.layers.slice(i));\n      return Object.assign({ }, style, {\n        layers: newLayers\n      });\n    }\n  }\n  return style;\n}\n\n/**\n * Create a new [Mapbox GL JS plugin](https://www.mapbox.com/blog/build-mapbox-gl-js-plugins/) that allows you to hide and show\n * traffic layers in your map and an optional toggle button.\n * @constructor\n * @param {object} options - Options to configure the plugin.\n * @param {boolean} [options.showTraffic=false] - Show or hide traffic overlay by default.\n * @param {boolean} [options.showTrafficButton=true] - Show a toggle button to turn traffic on and off.\n * @param {RegExp} [options.trafficSource=/mapbox-traffic-v\\d/] - The traffic source regex used to determine whether a layer displays traffic or not.\n */\nfunction MapboxTraffic(options) {\n  if (!(this instanceof MapboxTraffic)) {\n    throw new Error('MapboxTraffic needs to be called with the new keyword');\n  }\n\n  this.options = Object.assign({\n    showTraffic: false,\n    showTrafficButton: true,\n    trafficSource: /mapbox-traffic-v\\d/\n  }, options);\n\n  this.render = this.render.bind(this);\n  this.toggleTraffic = this.toggleTraffic.bind(this);\n  this._hideTraffic = this._hideTraffic.bind(this);\n  this._showTraffic = this._showTraffic.bind(this);\n  this._hasTraffic = this._hasTraffic.bind(this);\n  this._toggle = new TrafficButton({\n    show: this.options.showTrafficButton,\n    onToggle: this.toggleTraffic.bind(this)\n  });\n}\n\nMapboxTraffic.prototype._hasTraffic = function () {\n  var style = this._map.getStyle();\n  var trafficSource = this.options.trafficSource;\n  return Object.keys(style.sources).filter(function (sourceName) {\n    return trafficSource.test(sourceName);\n  }).length > 0;\n};\n\nMapboxTraffic.prototype.toggleTraffic = function () {\n  this.options.showTraffic = !this.options.showTraffic;\n  this.render();\n};\n\nMapboxTraffic.prototype.render = function () {\n  if (!this._hasTraffic()) {\n    this._map.addSource('mapbox://mapbox.mapbox-traffic-v1', {\n      type: 'vector',\n      url: 'mapbox://mapbox.mapbox-traffic-v1'\n    });\n\n    var roadLayers = this._map.getStyle().layers.filter(function (layer) {\n      return layer['source-layer'] === 'road';\n    });\n    var topRoadLayer = roadLayers[roadLayers.length - 1].id;\n    var style = this._map.getStyle();\n    var trafficStyle = addLayers(style, trafficLayers, topRoadLayer);\n    this._map.setStyle(trafficStyle);\n  }\n\n  if (this.options.showTraffic) {\n    this._showTraffic();\n    this._toggle.setMapIcon();\n  } else {\n    this._hideTraffic();\n    this._toggle.setTrafficIcon();\n  }\n};\n\nMapboxTraffic.prototype._hideTraffic = function () {\n  var style = this._map.getStyle();\n  var source = this.options.trafficSource;\n  style.layers.forEach(function (layer) {\n    if (source.test(layer['source'])) {\n      layer['layout'] = layer['layout'] || {};\n      layer['layout']['visibility'] = 'none';\n    }\n  });\n  this._map.setStyle(style);\n};\n\nMapboxTraffic.prototype._showTraffic = function () {\n  var style = this._map.getStyle();\n  var source = this.options.trafficSource;\n  style.layers.forEach(function (layer) {\n    if (source.test(layer['source'])) {\n      layer['layout'] = layer['layout'] || {};\n      layer['layout']['visibility'] = 'visible';\n    }\n  });\n  this._map.setStyle(style);\n};\n\nMapboxTraffic.prototype.onAdd = function (map) {\n  this._map = map;\n  map.on('load', this.render);\n  return this._toggle.elem;\n};\n\nMapboxTraffic.prototype.onRemove = function () {\n  this._map.off('load', this.render);\n\n  var elem = this._toggle.elem;\n  elem.parentNode.removeChild(elem);\n  this._map = undefined;\n};\n\nfunction container(child, show) {\n  var container = document.createElement('div');\n  container.className = 'mapboxgl-ctrl mapboxgl-ctrl-group';\n  container.appendChild(child);\n  if (!show) {\n    container.style.display = 'none';\n  }\n  return container;\n}\n\nfunction button() {\n  var btn = document.createElement('button');\n  btn.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-traffic';\n  btn.type = 'button';\n  btn['aria-label'] = 'Inspect';\n  return btn;\n}\n\nfunction TrafficButton(options) {\n  options = Object.assign({\n    show: true,\n    onToggle: function () {}\n  }, options);\n\n  this._btn = button();\n  this._btn.onclick = options.onToggle;\n  this.elem = container(this._btn, options.show);\n}\n\nTrafficButton.prototype.setTrafficIcon = function () {\n  this._btn.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-traffic';\n};\n\nTrafficButton.prototype.setMapIcon = function () {\n  this._btn.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-map';\n};\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = MapboxTraffic;\n} else {\n  window.MapboxTraffic = MapboxTraffic;\n}\n","// @flow\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxTrafficControl from '@mapbox/mapbox-gl-traffic';\n\nimport MapboxTraffic from '@mapbox/mapbox-gl-traffic';\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** Show or hide traffic overlay by default. */\n  showTraffic?: Boolean,\n\n  /** Show a toggle button to turn traffic on and off. */\n  showTrafficButton?: Boolean,\n\n  /**\n   * The traffic source regex used to determine whether a layer displays\n   * traffic or not\n   * */\n  trafficSource?: RegExp\n};\n\n/** Add a traffic toggle control. */\nclass TrafficControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxTrafficControl;\n\n  static defaultProps = {\n    showTraffic: false,\n    showTrafficButton: true,\n    trafficSource: /mapbox-traffic-v\\d/\n  };\n\n  componentDidMount() {\n    this._addControl();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.showTraffic !== this.props.showTraffic) {\n      this._control.toggleTraffic();\n    }\n\n    const shouldUpdate =\n      prevProps.showTrafficButton !== this.props.showTrafficButton ||\n      prevProps.trafficSource !== this.props.trafficSource;\n\n    if (shouldUpdate) {\n      this._map.removeControl(this._control);\n\n      this._addControl();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  _addControl = () => {\n    const { showTraffic, showTrafficButton, trafficSource } = this.props;\n\n    const control = new MapboxTraffic({\n      showTraffic,\n      showTrafficButton,\n      trafficSource\n    });\n\n    this._map.addControl(control);\n    this._control = control;\n  };\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default TrafficControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { FilterSpecification } from 'mapbox-gl/src/style-spec/types';\n\nimport MapContext from '../MapContext';\nimport isArraysEqual from '../../utils/isArraysEqual';\n\ntype Props = {|\n  /** Mapbox GL Layer id */\n  layerId: string,\n  /**\n   * The filter, conforming to the Mapbox Style Specification's\n   * filter definition. (see https://docs.mapbox.com/mapbox-gl-js/style-spec/#other-filter)\n   * If null or undefined is provided, the function removes any existing filter\n   * from the layer.\n   * */\n  filter: FilterSpecification,\n\n  /**\n   * Whether to check if the filter conforms to the Mapbox GL\n   * Style Specification. Disabling validation is a performance optimization\n   * that should only be used if you have previously validated the values you\n   * will be passing to this function.\n   * */\n  validate?: boolean\n|};\n\nclass Filter extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  static defaultProps = {\n    validate: true\n  };\n\n  componentDidMount() {\n    this._setFilter();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevFilter = prevProps.filter;\n    const prevValidate = prevProps.validate;\n    const { filter, validate } = this.props;\n\n    const shouldUpdate =\n      !isArraysEqual(prevFilter, filter) || prevValidate !== validate;\n\n    if (shouldUpdate) {\n      this._setFilter();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n    const { layerId } = this.props;\n    const targetLayer = this._map.getLayer(layerId);\n\n    if (targetLayer === undefined) {\n      return;\n    }\n\n    this._map.setFilter(layerId, undefined);\n  }\n\n  _setFilter() {\n    const { layerId, filter, validate } = this.props;\n    const targetLayer = this._map.getLayer(layerId);\n\n    if (targetLayer === undefined) {\n      return;\n    }\n\n    if (!Array.isArray(filter)) {\n      this._map.setFilter(layerId, undefined);\n    } else {\n      this._map.setFilter(layerId, filter, { validate });\n    }\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default Filter;\n"],"names":["MapContext","createContext","mapboxgl","Object","prototype","toString","call","global","process","browser","require","module","string","charAt","toUpperCase","slice","isArraysEqual","arr1","arr2","length","index","diff","newProps","prevProps","keys","Set","_toConsumableArray","reduce","acc","key","value","push","queryRenderedFeatures","map","layerId","position","radius","parameters","layers","bbox","eventListeners","Layer","PureComponent","props","_this","_classCallCheck","this","_defineProperty","_assertThisInitialized","_super","_map","before","onClick","onHover","onEnter","onLeave","onContextMenu","layer","_objectWithoutProperties","_excluded","getLayer","addLayer","_addEventListeners","forEach","_ref","_ref2","_slicedToArray","propName","eventName","handlerName","on","_id","_ref3","_ref4","off","_ref5","_ref6","event","point","x","y","features","_objectSpread","id","_addLayer","_this2","_this$props","_excluded2","type","source","removeLayer","moveLayer","paint","_ref7","_ref8","setPaintProperty","layout","_ref9","_ref10","setLayoutProperty","filter","setFilter","undefined","_updateEventListeners","getStyle","_removeEventListeners","_this3","createElement","Consumer","CustomLayer","LayerLikeTypes","isLayerLike","child","includes","forEachLayer","fn","children","Children","getLayerIds","layerIds","getLayerId","MapGL","loaded","originalEvent","getCenter","lng","viewport","latitude","lat","longitude","zoom","getZoom","pitch","getPitch","bearing","getBearing","onViewportChange","accessToken","_container","createRef","container","current","Map","style","mapStyle","interactive","center","minZoom","maxZoom","hash","bearingSnap","pitchWithRotate","attributionControl","logoPosition","failIfMajorPerformanceCaveat","preserveDrawingBuffer","antialias","refreshExpiredTiles","maxBounds","bounds","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","trackResize","renderWorldCopies","maxTileCacheSize","localIdeographFontFamily","transformRequest","collectResourceTiming","fadeDuration","crossSourceCollisions","locale","once","setState","onLoad","_onViewportChange","events","capitalizeFirstLetter","prop","Array","isArray","apply","cursorStyle","getCanvas","cursor","showTileBoundaries","_updateMapViewport","_updateMapStyle","_updateMapSize","_updateMapEventListeners","remove","prevEventHandler","newEventHandler","_this3$_map","_this3$_map2","_this4","newMapStyle","prevMapStyle","setStyle","viewportChangeMethod","options","viewportChangeOptions","flyTo","jumpTo","easeTo","Error","height","width","resize","state","_this$props2","className","shift","traverse","_children","cloneElement","normalizeChildren","Provider","ref","validateSource","concat","Source","isSourceLoaded","_onSourceData","prevSource","newSource","data","getSource","setData","url","coordinates","updateImage","tiles","_tileJSONRequest","cancel","scheme","_options","sourceCache","sourceCaches","clearTiles","load","removeSource","restSourceProps","addSource","prevId","prevSourceProps","_excluded3","_updateTileSource","_updateImageSource","_updateGeoJSONSource","_removeSource","Popup","_el","document","offset","closeButton","closeOnClick","onClose","anchor","maxWidth","_popup","setDOMContent","setLngLat","addTo","createPortal","Marker","onDragEnd","_marker","getLngLat","onDragStart","onDrag","element","draggable","rotation","pitchAlignment","rotationAlignment","addEventListener","_onDragEnd","_onDragStart","_onDrag","removeEventListener","FeatureState","sourceLayer","setFeatureState","removeFeatureState","_this$props3","Image","image","callback","loadImage","error","pixelRatio","sdf","_loadImage","addImage","removeImage","hasImage","AttributionControl","compact","customAttribution","control","addControl","_control","removeControl","FullscreenControl","GeolocateControl","positionOptions","fitBoundsOptions","trackUserLocation","showUserLocation","onTrackUserLocationEnd","onTrackUserLocationStart","onError","onGeolocate","enableHighAccuracy","timeout","NavigationControl","showCompass","showZoom","visualizePitch","ScaleControl","unit","MapboxLanguage","assign","setLanguage","bind","_initialStyleUpdate","_defaultLanguage","defaultLanguage","_isLanguageField","languageField","_getLanguageField","getLanguageField","language","_languageSource","languageSource","_languageTransform","languageTransform","changedLayers","spacing","noSpacing","test","standardSpacing","_excludedLayerIds","excludedLayerIds","supportedLanguages","adaptPropertyLanguage","isLangField","property","languageFieldName","isNameStringField","stops","stop","isNameFunctionField","newStops","indexOf","streetsSource","sources","sourceName","findStreetsSource","field","changeLayerTextProperty","languageStyle","navigator","languages","userLanguage","parts","split","languageCode","browserLanguage","onAdd","onRemove","LanguageControl","_setLanguage","trafficLayers","metadata","mapbox:group","source-layer","minzoom","visibility","line-join","line-cap","line-width","base","line-color","line-offset","line-opacity","MapboxTraffic","showTraffic","showTrafficButton","trafficSource","render","toggleTraffic","_hideTraffic","_showTraffic","_hasTraffic","_toggle","TrafficButton","show","onToggle","btn","_btn","onclick","elem","appendChild","display","roadLayers","topRoadLayer","trafficStyle","i","newLayers","addLayers","setMapIcon","setTrafficIcon","parentNode","removeChild","TrafficControl","_addControl","Filter","_setFilter","prevFilter","prevValidate","validate"],"mappings":"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ACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,wBAISkC,cAAA,CACbF,KAAQ,IACChC,MAAA,CACP,CACE,GACA,GAEF,CACE,GACA,MAIUmC,eAAA,CACdH,KAAQ,EACChC,MAAA,CACP,CACE,GACA,GAEF,CACE,GACA,OAMV,CACE/Q,GAAM,gCACNK,KAAQ,OACIkS,SAAA,CACMC,eAAA,oCAElBlS,OAAU,oCACVmS,eAAgB,UAChBC,QAAW,EACXzR,OAAU,CACR,MACA,CACE,KACA,QACA,cAEF,CACE,MACA,CACE,MACA,cAEF,CACE,KACA,QACA,YACA,cAIIJ,OAAA,CACR8R,WAAc,UACdC,YAAa,QACDC,WAAA,SAELpS,MAAA,CACOqS,aAAA,CACZC,KAAQ,IACRhC,MAAS,CACP,CACE,EACA,KAEF,CACE,GACA,IAEF,CACE,GACA,QAIQiC,aAAA,CACZD,KAAQ,EACR1S,KAAQ,cACRuQ,SAAY,aACHG,MAAA,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,wBAISkC,cAAA,CACbF,KAAQ,IACChC,MAAA,CACP,CACE,GACA,IAEF,CACE,GACA,GAEF,CACE,GACA,IAEF,CACE,GACA,QAIUmC,eAAA,CACdH,KAAQ,EACChC,MAAA,CACP,CACE,GACA,GAEF,CACE,GACA,OAMV,CACE/Q,GAAM,qBACNK,KAAQ,OACIkS,SAAA,CACMC,eAAA,oCAElBlS,OAAU,oCACVmS,eAAgB,UAChBC,QAAW,EACXzR,OAAU,CACR,MACA,CACE,KACA,QACA,cAEF,CACE,MACA,CACE,KACA,QACA,WAEF,CACE,MACA,gBAIIJ,OAAA,CACR8R,WAAc,UACdC,YAAa,QACDC,WAAA,SAELpS,MAAA,CACOqS,aAAA,CACZC,KAAQ,IACRhC,MAAS,CACP,CACE,GACA,KAEF,CACE,GACA,GAEF,CACE,GACA,MAIQiC,aAAA,CACZD,KAAQ,EACR1S,KAAQ,cACRuQ,SAAY,aACHG,MAAA,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,wBAISkC,cAAA,CACbF,KAAQ,IACChC,MAAA,CACP,CACE,GACA,GAEF,CACE,GACA,KAEF,CACE,GACA,IAEF,CACE,GACA,MAIUmC,eAAA,CACdH,KAAQ,EACChC,MAAA,CACP,CACE,GACA,GAEF,CACE,GACA,OAMV,CACE/Q,GAAM,mBACNK,KAAQ,OACIkS,SAAA,CACMC,eAAA,oCAElBlS,OAAU,oCACVmS,eAAgB,UAChBC,QAAW,EACXzR,OAAU,CACR,MACA,CACE,KACA,QACA,cAEF,CACE,MACA,CACE,KACA,QACA,SAEF,CACE,MACA,gBAIIJ,OAAA,CACR8R,WAAc,UACdC,YAAa,QACDC,WAAA,SAELpS,MAAA,CACOqS,aAAA,CACZC,KAAQ,IACChC,MAAA,CACP,CACE,EACA,IAEF,CACE,EACA,MAEF,CACE,GACA,IAEF,CACE,GACA,QAIQiC,aAAA,CACZD,KAAQ,EACR1S,KAAQ,cACRuQ,SAAY,aACHG,MAAA,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,wBAISkC,cAAA,CACbF,KAAQ,IACChC,MAAA,CACP,CACE,EACA,GAEF,CACE,EACA,GAEF,CACE,GACA,IAEF,CACE,GACA,MAIUmC,eAAA,IAGpB,CACElT,GAAM,sBACNK,KAAQ,OACIkS,SAAA,CACMC,eAAA,oCAElBlS,OAAU,oCACVmS,eAAgB,UAChBC,QAAW,EACXzR,OAAU,CACR,MACA,CACE,KACA,QACA,cAEF,CACE,MACA,CACE,KACA,QACA,YAEF,CACE,MACA,gBAIIJ,OAAA,CACR8R,WAAc,UACdC,YAAa,QACDC,WAAA,SAELpS,MAAA,CACOqS,aAAA,CACZC,KAAQ,IACChC,MAAA,CACP,CACE,EACA,IAEF,CACE,EACA,GAEF,CACE,GACA,IAEF,CACE,GACA,MAIQiC,aAAA,CACZD,KAAQ,EACR1S,KAAQ,cACRuQ,SAAY,aACHG,MAAA,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,wBAINmC,eAAgB,EACDD,cAAA,CACbF,KAAQ,IACRhC,MAAS,CACP,CACE,EACA,GAEF,CACE,EACA,KAEF,CACE,GACA,KAEF,CACE,GACA,IAEF,CACE,GACA,UAMV,CACE/Q,GAAM,kBACMuS,SAAA,CACMC,eAAA,oCAElB9J,IAAO,qBACEjI,MAAA,CACOqS,aAAA,CACZC,KAAQ,IACRhC,MAAS,CACP,CACE,GACA,GAEF,CACE,GACA,GAEF,CACE,GACA,MAIQiC,aAAA,CACZD,KAAQ,EACR1S,KAAQ,cACRuQ,SAAY,aACHG,MAAA,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,wBAISkC,cAAA,CACbF,KAAQ,IACChC,MAAA,CACP,CACE,GACA,GAEF,CACE,GACA,KAEF,CACE,GACA,IAEF,CACE,GACA,MAIUmC,eAAA,IAGpB,CACElT,GAAM,6BACMuS,SAAA,CACMC,eAAA,oCAElB9J,IAAO,gCACEjI,MAAA,CACOqS,aAAA,CACZC,KAAQ,IACRhC,MAAS,CACP,CACE,EACA,IAEF,CACE,GACA,GAEF,CACE,GACA,MAIQiC,aAAA,CACZD,KAAQ,EACR1S,KAAQ,cACRuQ,SAAY,aACHG,MAAA,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,wBAISkC,cAAA,CACbF,KAAQ,IACChC,MAAA,CACP,CACE,GACA,IAEF,CACE,GACA,GAEF,CACE,GACA,IAEF,CACE,GACA,QAIUmC,eAAA,IAGpB,CACElT,GAAM,sBACMuS,SAAA,CACMC,eAAA,oCAElB9J,IAAO,yBACEjI,MAAA,CACOqS,aAAA,CACZC,KAAQ,IACChC,MAAA,CACP,CACE,GACA,KAEF,CACE,GACA,QAIQiC,aAAA,CACZD,KAAQ,EACR1S,KAAQ,cACRuQ,SAAY,aACHG,MAAA,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,wBAISkC,cAAA,CACbF,KAAQ,IACChC,MAAA,CACP,CACE,GACA,GAEF,CACE,GACA,MAIUmC,eAAA,IAGp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"}